{{QBDLDATE:02-23-2025}}
{{QBDLTIME:17:43:06}}
{{DISPLAYTITLE:_SNDRAWBATCH}}
The '''_SNDRAWBATCH''' statement plays a batch of sound wave sample frequencies created by a program.


{{PageSyntax}}
: [[_SNDRAWBATCH]] {{Parameter|sampleFrameArray!([index&])}}[, {{Parameter|channels&}}][, {{Parameter|pipeHandle&}}][, {{Parameter|frameCount&}}]


{{PageParameters}}
* {{Parameter|sampleFrameArray!([index&])}} is an array of [[SINGLE]] values representing the audio sample frames. Optionally, an index can be specified to determine the starting point in the array.
* {{Parameter|channels&}} is number of channels. This can be 1 (mono) or 2 (stereo). It is assumed as mono if not provided.
* {{Parameter|pipeHandle&}} is a handle to the sound pipe, obtained by using the [[_SNDOPENRAW]] function.
* {{Parameter|frameCount&}} is the number of sample frames to play, not the number of array elements. Each frame corresponds to one set of samples per channel.


{{PageDescription}}
* Unlike [[_SNDRAW]], '''_SNDRAWBATCH''' is designed to play a batch of sample frames. This removes the need to call the underlying audio subsystem for each sample frame and thus improves performance.
* A sample frame is one ''snapshot'' of audio data that includes the sound levels for all channels at a specific point in time. In mono audio (1 channel), a sample frame is just 1 value. In stereo audio (2 channels), a sample frame has 2 values: one for the left channel and one for the right channel.
* Stereo audio data should always be interleaved (a left channel sample followed by a right channel sample).
* Ensure that [[_SNDRAWLEN]] is comfortably above 0 (until you've finished playing sound). If you get occasional unintended random clicks, this generally means that [[_SNDRAWLEN]] has dropped to 0.
* '''_SNDRAWBATCH''' is not intended to queue up many minutes worth of sound. It will probably work but will chew up a lot of memory (and if it gets swapped to disk, your sound could be interrupted abruptly).
* [[_SNDRATE]] determines how many samples are played per second. However, the timing is done by the sound card, not your program.
* '''Do not attempt to use [[_TIMER]] or [[_DELAY]] or [[_LIMIT]] to control the timing of _SNDRAW. You may use them for delays or to limit your program's CPU usage, but how much to queue should only be based on the [[_SNDRAWLEN]].'''


{{PageAvailability}}
<!-- QB64 = a version or none, QBPE = a version or all, Platforms = yes or no -->
<gallery widths="48px" heights="48px" mode="nolines">
File:Qb64.png|'''none'''
File:Qbpe.png|'''v4.0.0'''
File:Apix.png
File:Win.png|'''yes'''
File:Lnx.png|'''yes'''
File:Osx.png|'''yes'''
</gallery>
<!-- additional availability notes go below here -->


{{PageExamples}}
;Example 1: Displays and plays 12 notes from octaves 1 through 9 using '''_SNDRAWBATCH'''.
{{CodeStart}}
{{Cl|OPTION}} {{Cl|_EXPLICIT}}

{{Cl|REDIM}} soundBuffer({{Text|0|#F580B1}}) {{Cl|AS}} {{Cl|SINGLE}}
{{Cl|DIM}} {{Cl|AS}} {{Cl|LONG}} oct, octave, note
{{Cl|DIM}} fq {{Cl|AS}} {{Cl|SINGLE}}, noteStr {{Cl|AS}} {{Cl|STRING}}

{{Cl|DO}}
    {{Cl|COLOR}} {{Text|7|#F580B1}}
    {{Cl|PRINT}} {{Text|<nowiki>"Enter the octave 1 to 8 (0 quits!):"</nowiki>|#FFB100}};

    oct = {{Cl|VAL}}({{Cl|INPUT$}}({{Text|1|#F580B1}})): {{Cl|PRINT}} oct
    {{Cl|IF}} oct = {{Text|0|#F580B1}} {{Cl|THEN}} {{Cl|EXIT DO}}
    octave = oct - {{Text|4|#F580B1}} {{Text|<nowiki>'440 is in the 4th octave, 9th note</nowiki>|#919191}}

    {{Cl|COLOR}} oct + {{Text|1|#F580B1}}
    {{Cl|PRINT USING}} {{Text|<nowiki>"Octave: ##"</nowiki>|#FFB100}}; oct

    {{Cl|FOR}} note = {{Text|0|#F580B1}} {{Cl|TO}} {{Text|11|#F580B1}} {{Text|<nowiki>'notes C to B</nowiki>|#919191}}
        fq = {{Text|FreQ|#55FF55}}(octave, note, noteStr)
        {{Cl|PRINT USING}} {{Text|<nowiki>"#####.## \\"</nowiki>|#FFB100}}; fq, noteStr

        {{Text|GenWave|#55FF55}} fq, {{Cl|_SNDRATE}}, soundBuffer()
        {{Cl|_SNDRAWBATCH}} soundBuffer()
        {{Cl|_SNDRAWDONE}}

        {{Cl|DO}}
            {{Cl|_LIMIT}} {{Text|60|#F580B1}}
        {{Cl|DO...LOOP|LOOP WHILE}} {{Cl|_SNDRAWLEN}}

        {{Cl|IF}} {{Cl|LEN}}({{Cl|INKEY$}}) {{Cl|THEN}} {{Cl|EXIT DO}}
    {{Cl|NEXT}}
{{Cl|LOOP}}

{{Cl|END}}

{{Cl|FUNCTION}} {{Text|FreQ|#55FF55}} (octave {{Cl|AS}} {{Cl|LONG}}, note {{Cl|AS}} {{Cl|LONG}}, noteStr {{Cl|AS}} {{Cl|STRING}})
    {{Text|FreQ|#55FF55}} = {{Text|440!|#F580B1}} * {{Text|2!|#F580B1}} ^ (octave + (note + {{Text|3!|#F580B1}}) / {{Text|12!|#F580B1}} - {{Text|1!|#F580B1}}) {{Text|<nowiki>'* 12 note octave starts at C (3 notes up)</nowiki>|#919191}}
    noteStr = {{Cl|MID$ (function)|MID$}}({{Text|<nowiki>"C C#D D#E F F#G G#A A#B "</nowiki>|#FFB100}}, note * {{Text|2|#F580B1}} + {{Text|1|#F580B1}}, {{Text|2|#F580B1}})
{{Cl|END FUNCTION}}

{{Cl|SUB}} {{Text|GenWave|#55FF55}} (frequency {{Cl|AS}} {{Cl|SINGLE}}, sampleRate {{Cl|AS}} {{Cl|LONG}}, destBuffer() {{Cl|AS}} {{Cl|SINGLE}})
    {{Cl|REDIM}} destBuffer({{Text|0|#F580B1}} {{Cl|TO}} sampleRate - {{Text|1|#F580B1}}) {{Cl|AS}} {{Cl|SINGLE}}

    {{Cl|DIM}} sndLoop {{Cl|AS}} {{Cl|LONG}}

    {{Cl|DO...LOOP|DO WHILE}} sndLoop < sampleRate
        destBuffer(sndLoop) = {{Cl|SIN}}(({{Text|2!|#F580B1}} * {{Text|4!|#F580B1}} * {{Cl|ATN}}({{Text|1!|#F580B1}}) * sndLoop / sampleRate) * frequency) * {{Cl|EXP}}(-(sndLoop / sampleRate) * {{Text|3!|#F580B1}})
        sndLoop = sndLoop + {{Text|1|#F580B1}}
    {{Cl|LOOP}}
{{Cl|END SUB}}
{{CodeEnd}}
{{Small|Code by CodeGuy}}


{{PageSeeAlso}}
* [[_SNDRAW]], [[_SNDRAWLEN]]
* [[_SNDOPENRAW]], [[_SNDRAWDONE]]
* [[_SNDOPEN]], [[_SNDRATE]]
* [[PLAY]], [[BEEP]]
* [[DTMF Phone Demo]]


{{PageNavigation}}
