{{QBDLDATE:02-23-2025}}
{{QBDLTIME:17:44:09}}
'''GET''' reads unformatted (raw) data from an open TCP/IP connection opened with [[_OPENCLIENT]], [[_OPENHOST]] or [[_OPENCONNECTION]].


{{PageSyntax}}
; Syntax 1 (using variable strings):
: [[GET (TCP/IP statement)|GET #]]{{Parameter|handle&}}, , {{Parameter|dat$}}
* Using the {{Parameter|handle&}} return value from [[_OPENCLIENT]], [[_OPENHOST]] or [[_OPENCONNECTION]], the function reads '''any available data''' into variable length string {{Parameter|dat$}}, the string length is adjusted to the number of bytes read, so checking [[EOF]] is unnecessary.
; Syntax 2 (using fixed length variables/strings):
: [[GET (TCP/IP statement)|GET #]]{{Parameter|handle&}}, , {{Parameter|dat%}}
* Using the {{Parameter|handle&}} return value from [[_OPENCLIENT]], [[_OPENHOST]] or [[_OPENCONNECTION]], the function reads an [[INTEGER]] (in the shown syntax, due to the use of an integer ('''%''') variable). If '''2 bytes for the integer are available''', they are read into {{Parameter|dat%}}, if not then '''nothing is read''' and [[EOF]] {{Parameter|handle&}} will return -1 ({{Parameter|dat%}} its value will be undefined in the latter case).


== Communicating using unformatted/raw streamed data ==
* Benefit: Communicate with any TCP/IP compatible protocol (eg. FTP, HTTP, web-pages, etc).
* Disadvantage: Streamed data has no 'message length', as such just the program deals with a continuous number of bytes in a row. Some messages get fragmented and parts of messages can (and often do) arrive at different times, due to the very nature of the TCP/IP protocol.
* The position parameter (between the commas) is not used in TCP/IP connections.
* The programmer must cater for these situations manually.


{{PageExamples}}
;Example: Reading data of various lengths
{{CodeStart}}
{{Cl|GET (TCP/IP statement)|GET}} #handle&, , dat$ 'always reads any available data into variable length string
{{Cl|GET (TCP/IP statement)|GET}} #handle&, , dat% 'if 2 bytes (INTEGER) are available, they are read, else nothing is read
{{Cl|GET (TCP/IP statement)|GET}} #handle&, , dat& 'if 4 bytes (LONG) are available, they are read, else nothing is read
{{Cl|GET (TCP/IP statement)|GET}} #handle&, , dat&& 'if 8 bytes (_INTEGER64) are available, they are read, else nothing is read
{{CodeEnd}}

=== More examples ===
* [[_OPENCLIENT]]
* [[Email Demo]]


{{PageSeeAlso}}
* [[PUT (TCP/IP statement)]]
* [[_OPENCLIENT]], [[_OPENHOST]]
* [[_OPENCONNECTION]], [[GET|GET #]]
* [https://curl.haxx.se/ cURL] (HTTP and FTP file transfer)


{{PageNavigation}}
