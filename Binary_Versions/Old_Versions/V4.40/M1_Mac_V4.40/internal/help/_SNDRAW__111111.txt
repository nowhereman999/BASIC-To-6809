{{QBDLDATE:02-23-2025}}
{{QBDLTIME:17:43:05}}
{{DISPLAYTITLE:_SNDRAW}}
The '''_SNDRAW''' statement plays sound wave sample frequencies created by a program.


{{PageSyntax}}
: [[_SNDRAW]] {{Parameter|leftSample}}[, {{Parameter|rightSample}}][, {{Parameter|pipeHandle&}}]


{{PageParameters}}
* The {{Parameter|leftSample}} and {{Parameter|rightSample}} value(s) can be any [[SINGLE]] or [[DOUBLE]] literal or variable frequency value from -1.0 to 1.0.
* The {{Parameter|pipeHandle&}} parameter refers to the sound pipe opened using [[_SNDOPENRAW]].


{{PageDescription}}
* Specifying {{Parameter|pipeHandle&}} allows sound to be played through two or more channels at the same time ('''version 1.000 and up''').
* If only {{Parameter|leftSample}} value is used, the sound will come out of both speakers.
* _SNDRAW is designed for continuous play. It will not produce any sound until a significant number of samples have been queued. No sound is played if only a few samples are queued.
* Ensure that [[_SNDRAWLEN]] is comfortably above 0 (until you've finished playing sound). If you get occasional unintended random clicks, this generally means that [[_SNDRAWLEN]] has dropped to 0.
* _SNDRAW is not intended to queue up many minutes worth of sound. It will probably work but will chew up a lot of memory (and if it gets swapped to disk, your sound could be interrupted abruptly).
* [[_SNDRATE]] determines how many samples are played per second, but timing is done by the sound card, not your program.
* '''Do not attempt to use [[_TIMER]] or [[_DELAY]] or [[_LIMIT]] to control the timing of _SNDRAW. You may use them for delays or to limit your program's CPU usage, but how much to queue should only be based on the [[_SNDRAWLEN]].'''


{{PageAvailability}}
<!-- QB64 = a version or none, QBPE = a version or all, Platforms = yes or no -->
<gallery widths="48px" heights="48px" mode="nolines">
File:Qb64.png|'''v0.927'''
File:Qbpe.png|'''all'''
File:Apix.png
File:Win.png|'''yes'''
File:Lnx.png|'''yes'''
File:Osx.png|'''yes'''
</gallery>
<!-- additional availability notes go below here -->


{{PageExamples}}
;Example 1:Sound using a sine wave with _SNDRAW Amplitude * SIN(8 * ATN(1) * Duration * (Frequency / _SNDRATE))
{{CodeStart}}
{{Text|FREQ|#55FF55}} = {{Text|400|#F580B1}} {{Text|<nowiki>'any frequency desired from 36 to 10,000</nowiki>|#919191}}
Pi2 = {{Text|8|#F580B1}} * {{Cl|ATN}}({{Text|1|#F580B1}}) {{Text|<nowiki>'2 * pi</nowiki>|#919191}}
Amplitude = {{Text|.3|#F580B1}} {{Text|<nowiki>'amplitude of the signal from -1.0 to 1.0</nowiki>|#919191}}
SampleRate = {{Cl|_SNDRATE}} {{Text|<nowiki>'sets the sample rate</nowiki>|#919191}}
FRate = {{Text|FREQ|#55FF55}} / SampleRate {{Text|<nowiki>'</nowiki>|#919191}}
{{Cl|FOR}} Duration = {{Text|0|#F580B1}} {{Cl|TO}} {{Text|5|#F580B1}} * SampleRate {{Text|<nowiki>'play 5 seconds</nowiki>|#919191}}
    {{Cl|_SNDRAW}} Amplitude * {{Cl|SIN}}(Pi2 * Duration * FRate) {{Text|<nowiki>'sine wave</nowiki>|#919191}}
    {{Text|<nowiki>'_SNDRAW Amplitude * SGN(SIN(Pi2 * Duration * FRate))       'square wave</nowiki>|#919191}}
{{Cl|NEXT}}
{{Cl|_SNDRAWDONE}}
{{Cl|DO}}: {{Cl|DO...LOOP|LOOP WHILE}} {{Cl|_SNDRAWLEN}}
{{Cl|END}}
{{CodeEnd}}
{{Small|Code by DarthWho}}
:''Explanation:'' The loop Duration is determined by the number of seconds times the [[_SNDRATE]] number of samples per second. Square waves can use the same formula with Amplitude * [[SGN]](SIN(8 * ATN(1) * Duration * (Frequency/_SNDRATE))).


;Example 2:A simple ringing bell tone that tapers off.
{{CodeStart}}
t = {{Text|0|#F580B1}}
tmp$ = {{Text|<nowiki>"Sample = ##.#####   Time = ##.#####"</nowiki>|#FFB100}}
{{Cl|LOCATE}} {{Text|1|#F580B1}}, {{Text|60|#F580B1}}: {{Cl|PRINT}} {{Text|<nowiki>"Rate:"</nowiki>|#FFB100}}; {{Cl|_SNDRATE}}
{{Cl|DO}}
    {{Text|<nowiki>'queue some sound</nowiki>|#919191}}
    {{Cl|DO...LOOP|DO WHILE}} {{Cl|_SNDRAWLEN}} < {{Text|0.2|#F580B1}} {{Text|<nowiki>'you may wish to adjust this</nowiki>|#919191}}
        sample = {{Cl|SIN}}(t * {{Text|440|#F580B1}} * {{Cl|ATN}}({{Text|1|#F580B1}}) * {{Text|8|#F580B1}}) {{Text|<nowiki>'440Hz sine wave (t * 440 * 2p)</nowiki>|#919191}}
        sample = sample * {{Cl|EXP}}(-t * {{Text|3|#F580B1}}) {{Text|<nowiki>'fade out eliminates clicks after sound</nowiki>|#919191}}
        {{Cl|_SNDRAW}} sample
        t = t + {{Text|1|#F580B1}} / {{Cl|_SNDRATE}} {{Text|<nowiki>'sound card sample frequency determines time</nowiki>|#919191}}
    {{Cl|LOOP}}

    {{Text|<nowiki>'do other stuff, but it may interrupt sound</nowiki>|#919191}}
    {{Cl|LOCATE}} {{Text|1|#F580B1}}, {{Text|1|#F580B1}}: {{Cl|PRINT USING}} tmp$; sample; t
{{Cl|DO...LOOP|LOOP WHILE}} t < {{Text|3.0|#F580B1}} {{Text|<nowiki>'play for 3 seconds</nowiki>|#919191}}

{{Cl|_SNDRAWDONE}}
{{Cl|DO...LOOP|DO WHILE}} {{Cl|_SNDRAWLEN}} > {{Text|0|#F580B1}} {{Text|<nowiki>'Finish any left over queued sound!</nowiki>|#919191}}
{{Cl|LOOP}}
{{Cl|END}}
{{CodeEnd}}
{{Small|Code by Artelius}}


;Example 3:Routine uses _SNDRAW to display and play 12 notes from octaves 1 through 9.
{{CodeStart}}
{{Cl|DIM}} {{Cl|SHARED}} rate&
rate& = {{Cl|_SNDRATE}}
{{Cl|DO}}
    {{Cl|PRINT}} {{Text|<nowiki>"Enter the octave 1 to 8 (0 quits!):"</nowiki>|#FFB100}};
    oct% = {{Cl|VAL}}({{Cl|INPUT$}}({{Text|1|#F580B1}})): {{Cl|PRINT}} oct%
    {{Cl|IF}} oct% = {{Text|0|#F580B1}} {{Cl|THEN}} {{Cl|EXIT DO}}
    octave = oct% - {{Text|4|#F580B1}} {{Text|<nowiki>'440 is in the 4th octave, 9th note</nowiki>|#919191}}
    {{Cl|COLOR}} oct% + {{Text|1|#F580B1}}
    {{Cl|PRINT USING}} {{Text|<nowiki>"Octave: ##"</nowiki>|#FFB100}}; oct%
    {{Cl|FOR}} Note = {{Text|0|#F580B1}} {{Cl|TO}} {{Text|11|#F580B1}} {{Text|<nowiki>'notes C to B</nowiki>|#919191}}
        fq = {{Text|FreQ|#55FF55}}(octave, Note, note$)
        {{Cl|PRINT USING}} {{Text|<nowiki>"#####.## \\"</nowiki>|#FFB100}}; fq, note$
        {{Text|PlaySound|#55FF55}} fq
        {{Cl|IF}} {{Cl|INKEY$}} > {{Text|<nowiki>""</nowiki>|#FFB100}} {{Cl|THEN}} {{Cl|EXIT DO}}
    {{Cl|NEXT}}
{{Cl|LOOP}}
{{Cl|END}}

{{Cl|FUNCTION}} {{Text|FreQ|#55FF55}} (octave, note, note$)
    {{Text|FreQ|#55FF55}} = {{Text|440|#F580B1}} * {{Text|2|#F580B1}} ^ (octave + (note + {{Text|3|#F580B1}}) / {{Text|12|#F580B1}} - {{Text|1|#F580B1}}) {{Text|<nowiki>'* 12 note octave starts at C (3 notes up)</nowiki>|#919191}}
    note$ = {{Cl|MID$ (function)|MID$}}({{Text|<nowiki>"C C#D D#E F F#G G#A A#B "</nowiki>|#FFB100}}, note * {{Text|2|#F580B1}} + {{Text|1|#F580B1}}, {{Text|2|#F580B1}})
{{Cl|END FUNCTION}}

{{Cl|SUB}} {{Text|PlaySound|#55FF55}} (frq!) {{Text|<nowiki>' plays sine wave fading in and out</nowiki>|#919191}}
    SndLoop! = {{Text|0|#F580B1}}
    {{Cl|DO...LOOP|DO WHILE}} SndLoop! < rate&
        {{Cl|_SNDRAW}} {{Cl|SIN}}(({{Text|2|#F580B1}} * {{Text|4|#F580B1}} * {{Cl|ATN}}({{Text|1|#F580B1}}) * SndLoop! / rate&) * frq!) * {{Cl|EXP}}(-(SndLoop! / rate&) * {{Text|3|#F580B1}})
        SndLoop! = SndLoop! + {{Text|1|#F580B1}}
    {{Cl|LOOP}}
    {{Cl|_SNDRAWDONE}}
    {{Cl|DO}}: {{Cl|DO...LOOP|LOOP WHILE}} {{Cl|_SNDRAWLEN}} {{Text|<nowiki>'flush the sound playing buffer</nowiki>|#919191}}
{{Cl|END SUB}}
{{CodeEnd}}
{{Small|Code by CodeGuy}}


{{PageSeeAlso}}
* [[_SNDRAWBATCH]], [[_SNDRAWLEN]]
* [[_SNDOPENRAW]], [[_SNDRAWDONE]]
* [[_SNDOPEN]], [[_SNDRATE]]
* [[PLAY]], [[BEEP]]
* [[DTMF Phone Demo]]


{{PageNavigation}}
