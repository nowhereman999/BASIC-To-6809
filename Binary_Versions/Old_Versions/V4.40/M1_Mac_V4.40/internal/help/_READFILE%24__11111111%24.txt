{{QBDLDATE:02-23-2025}}
{{QBDLTIME:17:42:34}}
{{DISPLAYTITLE: _READFILE$}}
The '''_READFILE$''' function returns the complete contents of a file in a single string, but without the usual overhead. It does [[OPEN]], [[GET]] and [[CLOSE]] the file in one run.


{{PageSyntax}}
: {{Parameter|contents$}} = [[_READFILE$]]({{Parameter|fileSpec$}})


{{PageParameters}}
* {{Parameter|contents$}} is the entire file contents returned as [[STRING]]. May return an empty string, if the specified file was empty, or if the program was continued from a file related [[ERROR Codes|ERROR]].
* {{Parameter|fileSpec$}} is the name of the file to read as literal or variable [[STRING]], if required inclusive a full or relative path.
** To avoid errors you should use [[_FILEEXISTS]] before calling this function to make sure the file exists.


{{PageDescription}}
* Sometimes it's required or at least useful to have the whole contents of a file in a single string for further processing, e.g. to pass it to hashing or compression functions which expect strings.
* In earlier versions of QB64(PE) you had to implement that loading process manually all the time or create a reusable custom [[FUNCTION]] for it.
* Now '''_READFILE$''' will simplify this, it's mainly a convenience function to wrap the following code sequence into one handy function:
{{TextStart}}
fh = {{Cb|FREEFILE}}
{{Cb|OPEN}} fileSpec$ {{Cb|FOR}} {{Cb|BINARY}} {{Cb|AS}} #fh
contents$ = {{Cb|SPACE$}}({{Cb|LOF}}(fh))
{{Cb|GET}} #fh, , contents$
{{Cb|CLOSE}} #fh
{{TextEnd}}


{{PageAvailability}}
<!-- QB64 = a version or none, QBPE = a version or all, Platforms = yes or no -->
<gallery widths="48px" heights="48px" mode="nolines">
File:Qb64.png|'''none'''
File:Qbpe.png|'''v3.12.0'''
File:Apix.png
File:Win.png|'''yes'''
File:Lnx.png|'''yes'''
File:Osx.png|'''yes'''
</gallery>
<!-- additional availability notes go below here -->


{{PageExamples}}
;Example 1: Showing that this function's result is equal to the code sequence shown above.
{{CodeStart}}
{{Cm|$COLOR}}:{{Text|0|#F580B1}}

fileSpec$ = {{Text|<nowiki>"source\global\settings.bas"</nowiki>|#FFB100}}

fh = {{Cl|FREEFILE}}
{{Cl|OPEN}} fileSpec$ {{Cl|OPEN#File_Access_Modes|FOR}} {{Cl|OPEN#File_Access_Modes|BINARY}} {{Cl|OPEN|AS}} #fh
content$ = {{Cl|SPACE$}}({{Cl|LOF}}(fh))
{{Cl|GET}} #fh, , content$
{{Cl|CLOSE}} #fh

{{Cl|COLOR}} LightGreen
{{Cl|PRINT}} {{Text|<nowiki>"Using old manual load method..."</nowiki>|#FFB100}}
{{Cl|COLOR}} White
{{Cl|PRINT}} content$

{{Cl|COLOR}} LightGreen
{{Cl|PRINT}} {{Text|<nowiki>"Using new direct load method..."</nowiki>|#FFB100}}
{{Cl|COLOR}} White
{{Cl|PRINT}} {{Cl|_READFILE$}}(fileSpec$)

{{Cl|END}}
{{CodeEnd}}
{{Small|Example by RhoSigma}}

----

;Example 2: Passing a whole file's contents to hashing functions.
{{CodeStart}}
{{Cm|$COLOR}}:{{Text|0|#F580B1}}

fileSpec$ = {{Text|<nowiki>"source\global\settings.bas"</nowiki>|#FFB100}}

{{Cl|COLOR}} LightGreen
{{Cl|PRINT}} {{Text|<nowiki>"CRC32 of the file..."</nowiki>|#FFB100}}
{{Cl|COLOR}} White
{{Cl|PRINT}} {{Cl|RIGHT$}}({{Text|<nowiki>"00000000"</nowiki>|#FFB100}} + {{Cl|HEX$}}({{Cl|_CRC32}}({{Cl|_READFILE$}}(fileSpec$))), {{Text|8|#F580B1}})
{{Cl|PRINT}}

{{Cl|COLOR}} LightGreen
{{Cl|PRINT}} {{Text|<nowiki>"MD5 of the file..."</nowiki>|#FFB100}}
{{Cl|COLOR}} White
{{Cl|PRINT}} {{Cl|_MD5$}}({{Cl|_READFILE$}}(fileSpec$))

{{Cl|END}}
{{CodeEnd}}
{{Small|Example by RhoSigma}}


{{PageSeeAlso}}
* [https://qb64phoenix.com/forum/showthread.php?tid=2699 Featured in our "Keyword of the Day" series]
* [[_WRITEFILE]], [[BLOAD]], [[BSAVE]]
* [[_DEFLATE$]], [[_INFLATE$]]
* [[_ADLER32]], [[_CRC32]], [[_MD5$]]


{{PageNavigation}}
