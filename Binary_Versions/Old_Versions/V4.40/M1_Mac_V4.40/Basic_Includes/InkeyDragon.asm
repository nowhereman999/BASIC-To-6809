DEBDEL       EQU    $045E          CURSOR BLINK DELAY
DEBVAL       EQU    DEBDEL         KEYBOARD DEBOUNCE TIME
;KEYBUF       EQU    $0152          KEYBOARD MEMORY BUFFER

;Dragon code
KBROLL EQU    $0151    KEYBOARD ROLLOVER PATTERN TABLE
*
* P0 PIA
*
P0DDRA EQU    $FF00
P0PDRA EQU    P0DDRA
P0CRA  EQU    P0DDRA+1
P0DDRB EQU    P0DDRA+2
P0PDRB EQU    P0DDRB
P0CRB  EQU    P0DDRB+1

*
* POLLKB - POLLS THE K/B, DETECTS KEY CLOSURES, DEBOUNCES KEYS, PERFORMS
* ROLLOVER AND ENCODES CHARACTERS
*
KEYIN        PSHS   B,X            SAVE REGISTERS
             BSR    POLLKB         GET KEYSTROKE
             TSTA                  SET FLAGS
             PULS   B,X,PC         RESTORE REGISTERS
             
POLLKB LEAS   -2,S     RESERVE 2 BYTES OE WORRKSPACE ON STACK
       LDX    #KBROLL  SET UP ADDRESS OF KB ROLLOVER TABLE   ($0151)
* THE FIRST THING TO DO IS TO CHECK FOR ANY KEY CLOSURES WHATSOEVER
       CLR    P0PDRB   FORCE 0'S TO ALL COLUMNS  ($FF02)
       LDB    P0PDRA   READ ROW STATUS           ($FF00)
       ORB    #$80     SET UNUSED BIT
       CMPB    ,X      CHECK FOR ANY KEYBOAD ACTIVITY
       BEQ    NONKEY   IF THE SAME THEN NO CHANGE
* SOME CHANGE HAS BEEN DETECTED AT THIS POINT SO NEXT THING TO DO
* IS TO MAKE SURE THAT IT WASN'T THE JOYSTICK BUTTONS.
       TFR    B,A      SAVE ROW STATUS
       COM    P0PDRB   FORCE 1'S TO COLUMNS
       BSR    CHKROW   CHECK FOR JOYSTICK BUTTONS
       CMPB   #$ff     AS 0'S ON THE PA0 OR PA1
       BNE    NONKEY   MEAN BUTTONS ARE DOWN
       STA    ,X+      SAVE FULL ROW STATE IN ROLLOVER TABLE
* AT THIS POINT A CHANGE IN THE STATE OF THE ROWS HAS BEEN DETECTED
* SO THE FOLLOWINS CODE IS USED TO DETECT WHICH KEY IT WAS
       CLR     ,S      RESET COLUMN COUNT
       LDB    #$FE     SET UP 0 IN LS BIT
       STB    P0PDRB   AND SEND OUT TO MATRIX COLUMNS
SCANKB BSR    CHKROW   CHECK ROW CLOSURES
       STB    1,S      SAVE ROW STATE AWAY
       EORB    ,X      PERFORM KEY CLOSURE AND ROLLOVER DETECTION
       ANDB    ,X      BIT SET IN B IF IT DIFFERED FROM LAST TIME
       LDA    1,s      RESTORE ROW STATE AND
       STA    ,X+      SAVE IN ROLLOVER TABLE FOR NEXT TIME
       TSTB            ANY CHANGES TO KEYS?
       BNE    DEBKEY   YES, DEBOUNCE BEFORE ENCODING
       INC     ,S      ELSE UPDATE COLUMN COUNT
       COMA            USED TO SET CARRY BIT
       ROL    P0PDRB   BEFORE SHIFTING 0 To NEXT COLUMN
       BCS    SCANKB   REPEAT UNTIL ALL DONE OR CLOSURE FOUND
       BRA    NONKEY   MUST HAVE BEEN NO KEYS FOUND
* KEY FOUND - DEBOUNCE IT
DEBKEY
;       LDX    KBDLAY   WAIT DEBOUNCE PERIOD
;       BSR    IXDLAY   BEFORE RE-CHECKING KB

       LDX    #DEBVAL         GET KEYBOARD DEBOUNCE
;             JSR    LA7D3          GO WAIT A WHILE
!      LEAX   -1,X           DECREMENT DEBOUNCE COUNTER
       BNE    <              LOOP UNTIL DEBOUNCE TIME IS UP

       EXG    A,B      COPY ORIGINAL KEY CLOSURE
       BSR    CHKROW   AND GET NEW STATE
       CMPB   1,S      AND COMPARE WITH ORIGINAL
       EXG    A,B      RESTORE KEY CLOSURE
       BNE    NONKEY   IF NO MATCH NO KEY RETURNED
* MUST BE A VALID KEY AT THIS POINT SO ENCODE IT
       LDA     ,S      PICK UP COLUMN COUNT
COLS   EQU    $08
       SUBA   #COLS    OFFSET IT
NXTROW ADDA   #COLS    CALCULATE KEY POSITION AS FOLLOWS
       LSRB            KEY POS = (ROWPPOS)*(COLS) + (COL POS)
       BCC    NXTROW   ROW POS = BIT SET IN (B)
       TSTA            KEY POS = 0 IS A
       BEQ    KEY0     SPECIAL CASE
       CMPA   #$0C     CHECK NUMERIC KEY RANGE
       BLO    NUMKEY   WHICH IS $00 - $0B
       CMPA   #$11     CHECK SPECIAL CASE RANGE
       BLO    SPEC1    WHICH IS $0C - $10
       CMPA   #$2A     AND FINALLY CHECK RANGE
       BHI    SPEC2    $2B ONWARDS SPECIAL CASE
* MUST BE ALPHABETIC CHARACTER IF HERE
       ADDA   #$30     ADD OFFSET FOR ASCII UPPER CASE
       BSR    CSHIFT   AND CHECK WHETHER TO SHIFT
       BEQ    CODED    IF SHIFT THEN UPPER CASE REMAINS
* COULD BE LOWER CASE AT THIS POINT SO CHECK ALPHA LOCK
;       TST    ALLOCK
       TST    CASFLG        ; xxx Changed this 

       BNE    CODED    IF ON THEN UPPER CASE OK
       ORA    #$20     ELSE CONVERT TO LOWER CASE
       BRA    CODED    BEFORE EXIT
* NUMERIC (+ OTHERS) ENCODED HERE
NUMKEY ADDA   #$30     CONVERT TO ASCII
       LBSR   CSHIFT   CHECK SHIFT KEY
       BNE    CODED    UNSHIFTED - NO CHANGE
       SUBA   #$10     ELSE CONVERT YO UPPER SET
CODED  CMPA   #SHIFT0  CHECK FOR ALPHA LOCK TOGGLE
       BNE    POLEND
;       COM    ALLOCK   TOGGLE IF FOUND
       COM    CASFLG        ; xxx Changed this 

NONKEY CLRA            NO KEY CLOSURE EXIT CONDITION
POLEND PULS   X,PC     TIDY UP WORKSPACE AND RETURN

* SPECIAL CASES FOLLOW
SPEC2  SUBA   #26      MAKE SPECIAL CASES CONTIGUOUS
SPEC1  SUBA   #11      AND OFFSET IN RANGE 1 ->
KEY0   ASLA            2 ENTRIES/KEY
       LBSR   CSHIFT   CHECK FOR SHIFTED SET
       BNE    LOOKUP
       INCA            SHIFTED SET ENTRY OFFSET
LOOKUP LDX    #KEYTAB  SET UP LOOKUP TABLE BASE
       LDA    A,X      LOOKUP KEY ENTRY
       BRA    CODED    AND RETURN IT
* KEY CODE LOOKUP TABLE FOLLOWS
* SECOND ENTRY OF EACH IS THE SHIFTED KEY

; 30 12 2C 3C 2D 3D 2E 3E 2F 3F 40 13 5E 5F 0A 5B 08 15 09 5D 20 20 0D 0D 0C 5C 03 03
SHIFT0 EQU    $12
LF     EQU    $0A
BS     EQU    $08
SP     EQU    $20
KEYTAB FCB    '0,SHIFT0
       FCB    ',,'<
       FCB    '-,'=
       FCB    '.,'>
       FCB    '/,'?
       FCB    '@,$13
       FCB    $5E,$5F  UP ARROW
       FCB    LF,$5B   DOWN ARROW
       FCB    BS,$15   LEFT ARROW
       FCB    $09,$5D  RIGHT ARROW
       FCB    SP,SP    SPACE
       FCB    CR,CR    ENTER
       FCB    $0C,$5C  CLEAR
       FCB    $03,$03  BREAK
*
* ROUTINES USED BY THE KEYBOARD POLLER FOLLOW
*
* CHKROW - CHECKS ROWS OF K/8 MATRIX FOR CLOSURE
*
CHKROW LDB    P0PDRA   READ ROW DATA
       ORB    #$80     SET UNUSED BIT
       TST    P0PDRB   SHIFT KEY IS
       BMI    NOSHFT   IS MASKED OUT
       ORB    #$40     BY THIS
NOSHFT RTS
*
* CSHIFT - CHECKS THE STATE OF THE SHIFT KEY, Z = 1 IF PRESSED
*
CSHIFT LDB    #$7F     CLEAR TOP BIT
       STB    P0PDRB   OF THE COLUMNS
       LDB    P0PDRA   THEN READ ROWS
       ANDB   #$40     MASK OFF ALL BUT SHIFT KEY
       RTS
